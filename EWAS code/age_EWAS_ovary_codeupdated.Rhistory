library(sva)
load("noob_final_BMIQ_ovary_2-6-2021.RData")
beta <- data.matrix(noob_final_BMIQ_ovary)
M_normalized <- log2(beta/(1 - beta)) 
mval <- M_normalized
dim(mval)
mval2=as.data.frame(mval)
dim(mval2)
mval3<-mval[ , !(names(mval2) %in% c('GTEX-13QJC-1526-SM','GTEX-14LZ3-2326-SM','GTEX-15FZZ-0826-SM','GTEX-1JMOU-1626-SM','GTEX-R55G-1526-SM','GTEX-S4UY-1026-SM','GTEX-WXYG-1426-SM'))]
dim(mval3)
mval4=data.matrix(mval3)
dim(mval4)
mval4 <- mval4[, order(colnames(mval4))]
mval4=data.matrix(mval4)
colnames(mval4)
cov=read.table("cov_ovary_for_age_analysis.txt", as.is=T,head=T)
mod0 <- model.matrix(~ cov$BMI + factor(cov$raceRE) + cov$TRISCHD +cov$sample_group)
mod1 <- model.matrix(~ cov$AGE + cov$BMI + factor(cov$raceRE) + cov$TRISCHD +cov$sample_group )
svobj_cig_be_irw = sva(mval4,mod1, mod0, n.sv=5, method="irw")
sv <- data.frame(svobj_cig_be_irw$sv)
colnames(sv) <- paste("SV", colnames(sv), sep="")
rownames(sv) <- colnames(mval4)
dim(sv)
colnames(sv)
V <- sv
xnam <- paste(" V[,", 1:dim(V)[2], "]", sep="")
fmla <- as.formula(paste("~ cov$AGE   + cov$BMI + factor(cov$raceRE) + cov$TRISCHD + factor(cov$sample_group)+", paste(xnam, collapse= "+")))
design <- model.matrix(fmla)
library(limma)
fit <- lmFit(mval4, design)
fit <- eBayes(fit)
results <- topTable(fit, n=dim(mval4)[1], sort.by="P",adjust="BH", coef=2, confint=TRUE)
head(results)
manifest=read.csv("MethylationEPIC_v-1-0_B4.csv", head=T,row.names=1)
anno=manifest[c("Name","Genome_Build","CHR", "MAPINFO", "UCSC_RefGene_Name")]
results$Name<- rownames(results)
results_annotated <- merge(results, anno, by="Name")
colnames(cov)
results_final <- results_annotated[order(results_annotated$P.Value), ]
write.table(results_final, "age_EWAS_results_ovary_manifest_sv5updated.txt", quote=F)
write.table(V, "age_EWAS_ovary_SVsupdated.txt", quote=F)
library(qqman)
tiff("qqplot_ovary_age_EWASupdated.tiff")
qq(results$P.Value)
dev.off()
colnames(results_final)
head(results_final)
 results_final$BP=results_final$MAPINFO
 results_final$SNP=results_final$Name
 results_final$P=results_final$P.Value
tiff("manhattan_ovary_age_EWASupdated.tiff")
results_final$chr=as.numeric(results_final$CHR)
results_final$CHR=results_final$chr
manhattan(results_final)
dev.off()
library(simtrait)
pval_infl(results$P.Value)
savehistory(file = "age_EWAS_ovary_codeupdated.Rhistory")
